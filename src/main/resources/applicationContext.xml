<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		">

    <!--  开启组件扫描  -->
    <context:component-scan base-package="cn.lzy"></context:component-scan>
    <!--  开启标注形式的MVC -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!-- 引入数据库配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis/redis.properties</value>
            </list>
        </property>
    </bean>

    <!--  MySQL连接池  -->
    <bean  id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass">
            <value>${jdbc.driverClass}</value>
        </property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>


<!-- 创建sqlSessionFactory -->
    <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"  ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!-- 配置mybatis分页插件PageHelper -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!-- 什么都不配，使用默认的配置 -->
                        <value></value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
<!-- 批量产生Mapper实现类的组件 -->
    <bean  id="mapperScanner"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"  value="cn.lzy.dao"></property>
    </bean>

<!-- 配置ViewResolver -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"></property>
        <property name="suffix" value=".html"></property>
    </bean>

<!-- 创建事务管理器  -->
    <bean  id="transactionManager"
           class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource"  ref="dataSource"></property>
    </bean>
<!--  开启声明式事务  -->
    <tx:annotation-driven  transaction-manager="transactionManager"
                           proxy-target-class="true" />

    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有请求 -->
            <mvc:mapping path="/**" />
            <bean class="cn.lzy.interceptors.UserLoginInterceptor">
                <property name="exceptUrls">
                    <list>
                        <!--以下请求不做拦截                        -->
<!--                        <value>/index</value>-->
                        <value>Login</value>
                        <value>login</value>
                        <!--                        <value>/user/login</value>-->
                        <value>Register</value>
                        <value>register</value>
<!--                        <value>/mailSendCode</value>-->
                        <!--                        <value>/user/register</value>-->
                        <!--                        <value>/loginInterceptor</value>-->
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

<!--  开启标注形式的 aop  -->
<!--    <aop:aspectj-autoproxy proxy-target-class="true" />-->

<!--  放行静态资源 -->
    <mvc:default-servlet-handler/>

    <import resource="redis/spring-redis.xml"/>

</beans>